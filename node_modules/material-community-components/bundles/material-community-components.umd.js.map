{"version":3,"file":"material-community-components.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://material-community-components/color-picker/color-picker.ts","ng://material-community-components/color-picker/color-picker.service.ts","ng://material-community-components/color-picker/color-picker-collection.component.ts","ng://material-community-components/color-picker/color-picker.component.ts","ng://material-community-components/color-picker/color-picker-selector.component.ts","ng://material-community-components/color-picker/color-picker.directives.ts","ng://material-community-components/color-picker/color-picker.module.ts","ng://material-community-components/scrollspy/scrollspy.ts","ng://material-community-components/scrollspy/scrollspy.service.ts","ng://material-community-components/scrollspy/scrollspy.directives.ts","ng://material-community-components/scrollspy/scrollspy.module.ts","ng://material-community-components/speed-dial/animations.ts","ng://material-community-components/speed-dial/speed-dial-actions.component.ts","ng://material-community-components/speed-dial/speed-dial.component.ts","ng://material-community-components/speed-dial/speed-dial.module.ts","ng://material-community-components/timer-picker/timer-picker.ts","ng://material-community-components/timer-picker/timer-picker.component.ts","ng://material-community-components/timer-picker/timer-picker.directives.ts","ng://material-community-components/timer-picker/timer-picker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\n/** Contant used as empty color */\nexport const EMPTY_COLOR = new InjectionToken<string>('empty-color');\n\n/** Constante to set usedColorStart from the module import */\nexport const USED_COLORS = new InjectionToken<string[]>('used-colors');\n\n/**\n *\n */\nexport interface ColorPickerConfig {\n  empty_color?: string;\n  used_colors?: string[];\n}\n\n/**\n * This interface represents one color. Using this interface instead simple string\n * will help screen readers, because the text attribute ir set to the aria-label of\n * the option\n */\nexport interface MccColorPickerItem {\n  text: string;\n  value: string;\n}\n\nexport type MccColorPickerOption = string | MccColorPickerItem;\n\n/**\n * Verify if color has # as a first char. If not, add this char\n * to the color\n * @param color string\n */\nexport function coerceHexaColor(color: string): string {\n  if (color && color.indexOf('#') !== 0) {\n    color = `#${color}`;\n  }\n\n  if (!isValidColor(color)) {\n    return;\n  }\n\n  return color.toUpperCase();\n}\n\n/**\n * Validate if the color is valid\n * @param color string\n */\nexport function isValidColor(color: string): boolean {\n  // validate if color is an hexadecimal\n  if (\n    !color ||\n    color.charAt(0) !== '#' ||\n    color.length < 4 ||\n    color.length > 7\n  ) {\n    return false;\n  }\n\n  // validate rgb of the color\n  return color.replace('#', '')\n    .match(/.{1,2}/g)\n    .map(v => Number.isNaN(parseInt(v, 16)))\n    .indexOf(true) === -1;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { coerceHexaColor, isValidColor, EMPTY_COLOR, USED_COLORS } from './color-picker';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class MccColorPickerService {\n  /**\n   * Array of all used colors\n   */\n  private _colors: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  constructor(\n    @Inject(EMPTY_COLOR) private emptyColor: string,\n    @Inject(USED_COLORS) private usedColors: string[]\n  ) {\n    this._colors.next(usedColors);\n  }\n\n  /**\n   * Add new color to used colors\n   * @param color string\n   */\n  addColor(color: string): void {\n    if (!color || !isValidColor(color)) {\n      return;\n    }\n\n    color = coerceHexaColor(color) || this.emptyColor;\n\n    const colors = this._colors.getValue();\n    if (!colors.find(_color => _color === color)) {\n      colors.push(color);\n      this._colors.next(colors);\n    }\n  }\n\n  /**\n   * Return Observable of colors\n   */\n  getColors(): Observable<string[]> {\n    return this._colors.asObservable();\n  }\n\n  /**\n   * Reset the array of used colors\n   */\n  resetUseColors(): void {\n    this._colors.next([]);\n  }\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  Inject,\n  Output,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY_COLOR, MccColorPickerOption } from './color-picker';\n\n@Component({\n  selector: 'mcc-color-picker-collection',\n  templateUrl: './color-picker-collection.component.html',\n  styleUrls: ['./color-picker-collection.component.scss'],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MccColorPickerCollectionComponent implements AfterContentChecked {\n  /**\n   * Hide empty slots\n   * Empty slots are the difference between the collection size and limit\n   */\n  @Input()\n  set hideEmpty(value: boolean) {\n    this._hideEmpty = coerceBooleanProperty(value);\n  }\n  private _hideEmpty: boolean = false;\n\n  /**\n   * Name of the collection\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    this._label = value;\n  }\n  private _label: string;\n\n  /**\n   * Array of colors to be displayed\n   */\n  @Input()\n  get colors(): MccColorPickerOption[] {\n    return this._colors;\n  }\n  set colors(values: MccColorPickerOption[]) {\n    this._colors = values;\n  }\n  private _colors: MccColorPickerOption[];\n\n  /**\n   * Size limit of the collection\n   */\n  @Input() size: number = 30;\n\n  /**\n   * Show transparent option\n   */\n  @Input() transparent: boolean = false;\n\n  /**\n   * Emit selected color value\n   */\n  @Output() changeColor: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    @Inject(EMPTY_COLOR) public emptyColor: string\n  ) {}\n\n  ngAfterContentChecked() {\n    if (this._colors && this._colors.length !== this.size) {\n      this._colors = this._colors\n        .slice(0, this.size)\n        .concat(new Array(this._getCollectionDiffSize()));\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Return the difference between the limit and the collection size.\n   * Always return 0 when hideEmpty is true\n   * @returns number\n   */\n  private _getCollectionDiffSize(): number {\n    if (this._colors.length > this.size || this._hideEmpty) {\n      return 0;\n    }\n\n    return this.size - this._colors.length;\n  }\n\n  /**\n   * Remove color\n   */\n  setTransparent(): void {\n    this.changeColor.emit(this.emptyColor);\n  }\n\n  /**\n   * Emit selected color value\n   * @param option MccColorPickerOption\n   */\n  setColor(option: MccColorPickerOption) {\n    const color = typeof option === 'string' ? option : option.value;\n    this.changeColor.emit(color);\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EMPTY_COLOR, coerceHexaColor } from './color-picker';\nimport { MccColorPickerCollectionComponent } from './color-picker-collection.component';\nimport { MccColorPickerService } from './color-picker.service';\n\n@Component({\n  selector: 'mcc-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss'],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MccColorPickerComponent implements AfterContentInit, OnInit, OnDestroy {\n  /**\n   * Get all collections\n   */\n  @ContentChildren(MccColorPickerCollectionComponent)\n  _collections: QueryList<MccColorPickerCollectionComponent>;\n\n  /**\n   * Change label of the collection UsedColors\n   */\n  @Input()\n  get usedColorLabel(): string {\n    return this._usedColorLabel;\n  }\n  set usedColorLabel(value: string) {\n    this._usedColorLabel = value;\n  }\n  private _usedColorLabel: string = 'Used Colors';\n\n  /**\n   * Set initial value for used color\n   */\n  @Input()\n  set usedColorStart(colors: string[]) {\n    if (colors && colors.length > 0) {\n      for (const color of colors) {\n        this.colorPickerService.addColor(color);\n      }\n    }\n  }\n\n  /**\n   * Set usedColor to be used in reverse\n   */\n  @Input()\n  set reverseUsedColors(reverse: boolean) {\n    this._reverseUsedColor = coerceBooleanProperty(reverse);\n  }\n  private _reverseUsedColor: boolean = false;\n\n  /**\n   * Hide the hexadecimal color forms.\n   */\n  @Input('hideHexForms')\n  get hideHexForms(): boolean {\n    return this._hideHexForms;\n  }\n  set hideHexForms(value: boolean) {\n    this._hideHexForms = value;\n  }\n  private _hideHexForms: boolean = false;\n\n  /**\n   * Hide empty slots from the collection UsedColors\n   */\n  @Input('hideEmptyUsedColors')\n  get hideEmpty(): boolean {\n    return this._hideEmpty;\n  }\n  set hideEmpty(value: boolean) {\n    this._hideEmpty = coerceBooleanProperty(value);\n  }\n  private _hideEmpty: boolean = false;\n\n  /**\n   * Hide transparent option of UsedColors\n   */\n  @Input('hideTransparentUsedColors')\n  get hideTransparent(): boolean {\n    return this._hideTransparent;\n  }\n  set hideTransparent(value: boolean) {\n    this._hideTransparent = coerceBooleanProperty(value);\n  }\n  private _hideTransparent: boolean = false;\n\n  /**\n   * Hide UsedColors collection\n   */\n  @Input('hideUsedColors')\n  get hideUsedColors(): boolean {\n    return this._hideUsedColors;\n  }\n  set hideUsedColors(value: boolean) {\n    this._hideUsedColors = coerceBooleanProperty(value);\n  }\n  private _hideUsedColors: boolean = false;\n\n  /**\n   * Start with a color selected\n   */\n  @Input()\n  get selectedColor(): string {\n    return this._selectedColor;\n  }\n  set selectedColor(value: string) {\n    if (this._selectedColor !== value) {\n      this.changeDetectorRef.markForCheck();\n    }\n\n    this._selectedColor = coerceHexaColor(value) || this.emptyColor;\n  }\n  private _selectedColor: string;\n\n  /**\n   * Define if the panel will be initiated open\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  set isOpen(value: boolean) {\n    this._isOpen = coerceBooleanProperty(value);\n  }\n  private _isOpen: boolean = false;\n\n  /**\n   * Define if the panel will show in overlay or not\n   */\n  @Input()\n  get overlay(): boolean {\n    return this._overlay;\n  }\n  set overlay(value: boolean) {\n    this._overlay = coerceBooleanProperty(value);\n  }\n  private _overlay: boolean = true;\n\n  /**\n   * Hide the action buttons (cancel/confirm)\n   */\n  @Input()\n  get hideButtons(): boolean {\n    return this._hideButtons;\n  }\n  set hideButtons(value: boolean) {\n    this._hideButtons = coerceBooleanProperty(value);\n  }\n  private _hideButtons: boolean = false;\n\n  /**\n   * Define new height for the selector\n   */\n  @Input()\n  get colorPickerSelectorHeight(): number {\n    return this._colorPickerSelectorHeight;\n  }\n  set colorPickerSelectorHeight(height: number) {\n    this._colorPickerSelectorHeight = height;\n  }\n  private _colorPickerSelectorHeight: number = 170;\n\n  /**\n   * Hide the color picker selector\n   */\n  @Input()\n  get hideColorPickerSelector(): boolean {\n    return this._hideColorPickerSelector;\n  }\n  set hideColorPickerSelector(value: boolean) {\n    this._hideColorPickerSelector = coerceBooleanProperty(value);\n  }\n  private _hideColorPickerSelector: boolean = false;\n\n  /**\n   * Set the size of the used colors\n   */\n  @Input() usedSizeColors: number = 30;\n\n  /**\n   * Change btnCancel label\n   */\n  @Input() btnCancel: string = 'Cancel';\n\n  /**\n   * Change btnConfirm label\n   */\n  @Input() btnConfirm: string = 'Confirm';\n\n  /**\n   * Event emitted when user change the selected color (without confirm)\n   */\n  @Output() change = new EventEmitter();\n\n  /**\n   * Event emitted when selected color is confirm\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Event emitted when is clicked outside of the component\n   */\n  @Output() clickOut = new EventEmitter();\n\n  /**\n   * Return a Observable with the color the user is picking\n   */\n  get tmpSelectedColor$(): Observable<string> {\n    return this._tmpSelectedColor.asObservable();\n  }\n  private _tmpSelectedColor: BehaviorSubject<string>;\n\n  /**\n   * Observable with all the colors used by the user\n   */\n  get usedColors$(): Observable<string[]> {\n    return this.colorPickerService\n      .getColors()\n      .pipe(map(colors => (!this._reverseUsedColor ? colors : [...colors].reverse())));\n  }\n\n  /**\n   * Array of subscriptions from the collections\n   */\n  private _collectionSubs: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef,\n    private colorPickerService: MccColorPickerService,\n    @Inject(EMPTY_COLOR) public emptyColor: string\n  ) {}\n\n  ngOnInit() {\n    if (!this._selectedColor) {\n      this._selectedColor = this.emptyColor;\n    }\n\n    this._tmpSelectedColor = new BehaviorSubject<string>(this._selectedColor);\n  }\n\n  /**\n   * Walk throw all collections and subcribe to changes\n   */\n  ngAfterContentInit() {\n    if (this._collections) {\n      this._collections.forEach((collection: MccColorPickerCollectionComponent) => {\n        const subscription = collection.changeColor.subscribe(color => {\n          this.updateTmpSelectedColor(color);\n        });\n\n        this._collectionSubs.push(subscription);\n      });\n    }\n  }\n\n  /**\n   * Destroy all subscriptions\n   */\n  ngOnDestroy() {\n    if (this._collectionSubs) {\n      this._collectionSubs.forEach((subscription: Subscription) => {\n        if (subscription && !subscription.closed) {\n          subscription.unsubscribe();\n        }\n      });\n    }\n  }\n\n  /**\n   * Update selected color and emit the change\n   */\n  private _updateSelectedColor() {\n    if (this._isOpen || !this.overlay) {\n      const tmpSelectedColor = this._tmpSelectedColor.getValue();\n      if (this._selectedColor !== tmpSelectedColor) {\n        this._selectedColor = tmpSelectedColor;\n        this.selected.next(this._selectedColor);\n      } else {\n        this.selected.emit(this._selectedColor);\n      }\n    }\n  }\n\n  /**\n   * Open/close color picker panel\n   */\n  toggle() {\n    this._isOpen = !this._isOpen;\n    if (!this._isOpen && this._selectedColor !== this.emptyColor) {\n      this.colorPickerService.addColor(this._selectedColor);\n    }\n  }\n\n  /**\n   * Update selected color, close the panel and notify the user\n   */\n  backdropClick(): void {\n    if (this._hideButtons) {\n      this.confirmSelectedColor();\n    } else {\n      this.cancelSelection();\n    }\n    this.clickOut.emit(null);\n  }\n\n  /**\n   * Update tmpSelectedColor\n   * @param color string\n   */\n  updateTmpSelectedColor(color: string) {\n    if (color) {\n      this._tmpSelectedColor.next(color);\n      this.change.next(color);\n      if (this._hideButtons) {\n        this._updateSelectedColor();\n      }\n    }\n  }\n\n  /**\n   * Cancel the selection and close the panel\n   */\n  cancelSelection() {\n    this._tmpSelectedColor.next(this._selectedColor);\n    this.toggle();\n  }\n\n  /**\n   * Update selectedColor and close the panel\n   */\n  confirmSelectedColor() {\n    this._updateSelectedColor();\n    this.toggle();\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EMPTY_COLOR, coerceHexaColor, isValidColor } from './color-picker';\n\ninterface ColorOption {\n  type: string;\n  value: number;\n}\n\n@Component({\n  selector: 'mcc-color-picker-selector',\n  templateUrl: './color-picker-selector.component.html',\n  styleUrls: ['./color-picker-selector.component.scss'],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MccColorPickerSelectorComponent\n  implements AfterViewInit, OnInit, OnChanges, OnDestroy {\n  /**\n   * ElemenRef of the main color\n   */\n   @ViewChild('block', {static: false}) _block: ElementRef;\n\n  /**\n   * ElemenRef of the pointer main color\n   */\n  @ViewChild('blockPointer', {static: false}) _bp: ElementRef;\n\n  /**\n   * Canvas of the block\n   */\n  @ViewChild('blockCanvas', {static: false})\n  set blockCursor(el: ElementRef) {\n    this._bc = el;\n  }\n  private _bc: ElementRef;\n  private _blockContext: any;\n\n  /**\n   * ElementRef of the color base\n   */\n  @ViewChild('strip', {static: false}) _strip: ElementRef;\n  // hold _strip context\n  private _stripContext: any;\n\n  /**\n   * Container of the strip\n   */\n  @ViewChild('stripContainer', {static: false})\n  set stripCursor(el: ElementRef) {\n    this._sc = el;\n  }\n  private _sc: ElementRef;\n\n  /**\n   * Change height base of the selector\n   */\n  @Input('height')\n  set height(value: number) {\n    this._height = value;\n  }\n  get selectorHeight(): number {\n    return this._height;\n  }\n  get stripHeight(): number {\n    return this._height - 10;\n  }\n  private _height: number = 170;\n\n  /**\n   * Receive selected color from the component\n   */\n  @Input()\n  get selectedColor(): string {\n    return this._selectedColor;\n  }\n  set selectedColor(value: string) {\n    this._selectedColor = value || this.emptyColor;\n  }\n  private _selectedColor: string = '';\n\n  /**\n   * Hide the hexadecimal color forms.\n   */\n  @Input('hideHexForms')\n  get hideHexForms(): boolean {\n    return this._hideHexForms;\n  }\n  set hideHexForms(value: boolean) {\n    this._hideHexForms = value;\n  }\n  private _hideHexForms: boolean = false;\n\n  /**\n   * Emit update when a color is selected\n   */\n  @Output() changeSelectedColor = new EventEmitter();\n\n  /**\n   * RGBA current color\n   */\n  private _rgbaColor: string = 'rgba(255,0,0,1)';\n\n  /**\n   * Subject of the current selected color by the user\n   */\n  private _tmpSelectedColor: BehaviorSubject<string>;\n\n  /**\n   * Subscription of the tmpSelectedColor Observable\n   */\n  private _tmpSelectedColorSub: Subscription;\n\n  /**\n   * Subscription of the hexForm values change\n   */\n  private _hexValuesSub: Subscription;\n\n  /**\n   * Subscription of the rbgForm values change\n   */\n  private _rgbValuesSub: Subscription;\n\n  /**\n   * Handle color of the text\n   */\n  textClass: string = 'black';\n\n  /**\n   * Validate if the mouse button is pressed\n   */\n  _isPressed: boolean = false;\n\n  /**\n   * Form of the color in hexa\n   */\n  hexForm: FormGroup;\n\n  /**\n   * Form and keys of the fields in RGB\n   */\n  rgbKeys = ['R', 'G', 'B'];\n  rgbForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private render: Renderer2,\n    @Inject(EMPTY_COLOR) private emptyColor: string\n  ) {}\n\n  ngOnInit() {\n    this._tmpSelectedColor = new BehaviorSubject<string>(this._selectedColor);\n    this._tmpSelectedColorSub = this._tmpSelectedColor.subscribe(color => {\n      if (color !== this._selectedColor && isValidColor(color)) {\n        if (this.hexForm.get('hexCode').value !== color) {\n          this.hexForm.setValue({ hexCode: color });\n        }\n        this.changeSelectedColor.emit(coerceHexaColor(color) || this.emptyColor);\n      }\n    });\n\n    // hex form\n    this.hexForm = this.formBuilder.group({\n      hexCode: [this.selectedColor, [Validators.minLength(7), Validators.maxLength(7)]],\n    });\n\n    // rgb dynamic form\n    const rgbGroup: any = {};\n    const rgbValue: number[] = this._getRGB();\n    this.rgbKeys.forEach(\n      (key, index) =>\n        (rgbGroup[key] = new FormControl(rgbValue[index], {\n          validators: [\n            Validators.min(0),\n            Validators.max(256),\n            Validators.required,\n            Validators.maxLength(3),\n          ],\n          updateOn: 'blur',\n        }))\n    );\n    this.rgbForm = this.formBuilder.group(rgbGroup);\n\n    // watch changes on forms\n    this._onChanges();\n  }\n\n  /**\n   * Update RGB, RGBA and Gradient when selectedColor change and\n   * the mouse button is pressed\n   * @param changes SimpleChanges\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if ('selectedColor' in changes && changes['selectedColor'].currentValue !== this.emptyColor) {\n      if (!this._isPressed) {\n        this._updateRGB();\n        this._updateRGBA();\n        if (this._blockContext) {\n          this._fillGradient();\n        }\n      }\n\n      const rgb = this._getRGB();\n      const o = Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000);\n      this.textClass = o > 125 ? 'black' : 'white';\n    }\n  }\n\n  /**\n   * Destroy all subscriptions\n   */\n  ngOnDestroy() {\n    if (this._tmpSelectedColorSub && !this._tmpSelectedColorSub.closed) {\n      this._tmpSelectedColorSub.unsubscribe();\n    }\n    if (this._hexValuesSub && !this._hexValuesSub.closed) {\n      this._hexValuesSub.unsubscribe();\n    }\n    if (this._rgbValuesSub && !this._rgbValuesSub.closed) {\n      this._rgbValuesSub.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.render.listen(this._block.nativeElement, 'mousedown', e => {\n      this._isPressed = true;\n      this.changeColor(e);\n    });\n    this.render.listen(this._block.nativeElement, 'mouseup', () => (this._isPressed = false));\n    this.render.listen(this._block.nativeElement, 'mouseout', () => (this._isPressed = false));\n    this.render.listen(this._block.nativeElement, 'mousemove', e => this.changeColor(e));\n    this._blockContext = this._bc.nativeElement.getContext('2d');\n    this._blockContext.rect(0, 0, this._bc.nativeElement.width, this._bc.nativeElement.height);\n\n    this.render.listen(this._strip.nativeElement, 'mousedown', e => {\n      this._isPressed = true;\n      this.changeBaseColor(e);\n    });\n    this.render.listen(this._strip.nativeElement, 'mouseup', () => (this._isPressed = false));\n    this.render.listen(this._strip.nativeElement, 'mouseout', () => (this._isPressed = false));\n    this.render.listen(this._strip.nativeElement, 'mousemove', e => this.changeBaseColor(e));\n    this._stripContext = this._strip.nativeElement.getContext('2d');\n    this._stripContext.rect(\n      0,\n      0,\n      this._strip.nativeElement.width,\n      this._strip.nativeElement.height\n    );\n    const grd1 = this._stripContext.createLinearGradient(0, 0, 0, this._bc.nativeElement.height);\n    grd1.addColorStop(0, 'rgba(255, 0, 0, 1)');\n    grd1.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n    grd1.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n    grd1.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n    grd1.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n    grd1.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n    grd1.addColorStop(1, 'rgba(255, 0, 0, 1)');\n    this._stripContext.fillStyle = grd1;\n    this._stripContext.fill();\n\n    this._fillGradient();\n  }\n\n  /**\n   * Generate colors based on the RGBA color\n   */\n  private _fillGradient(): void {\n    this._blockContext.fillStyle = this._rgbaColor;\n    this._blockContext.fillRect(0, 0, this._bc.nativeElement.width, this._bc.nativeElement.height);\n\n    const grdWhite = this._stripContext.createLinearGradient(0, 0, this._bc.nativeElement.width, 0);\n    grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n    grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n    this._blockContext.fillStyle = grdWhite;\n    this._blockContext.fillRect(0, 0, this._bc.nativeElement.width, this._bc.nativeElement.height);\n\n    const grdBlack = this._stripContext.createLinearGradient(\n      0,\n      0,\n      0,\n      this._bc.nativeElement.height\n    );\n    grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n    grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n    this._blockContext.fillStyle = grdBlack;\n    this._blockContext.fillRect(0, 0, this._bc.nativeElement.width, this._bc.nativeElement.height);\n  }\n\n  /**\n   * Watch change on forms\n   */\n  private _onChanges() {\n    // validate digited code and update when digitation is finished\n    this._hexValuesSub = this.hexForm.get('hexCode').valueChanges\n      .pipe(map(color => color !== this.emptyColor ? coerceHexaColor(color) : color))\n      .subscribe(value => {\n        if (!this._isPressed && isValidColor(value)) {\n          this._tmpSelectedColor.next(value || this.emptyColor);\n        }\n      });\n\n    this._rgbValuesSub = this.rgbForm.valueChanges.subscribe(controls => {\n      const data: string[] = [];\n      for (const key in controls) {\n        if (!controls[key] && controls[key] !== 0 || controls[key] > 255) {\n          data.push('');\n          continue;\n        }\n\n        data.push(controls[key]);\n      }\n\n      const hex = this._getHex(data);\n      if (hex !== this._selectedColor && hex.length === 7) {\n        this._tmpSelectedColor.next(hex);\n      }\n    });\n  }\n\n  /**\n   * Convert HEX/canvas value to rgb\n   * @param data any\n   * @returns number[]\n   */\n  private _getRGB(data?: any): number[] {\n    if (data) {\n      return [data[0], data[1], data[2]];\n    }\n    const hex = this._selectedColor.replace('#', '');\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n\n    return [r, g, b];\n  }\n\n  /**\n   * Convert RGB value to HEX\n   * @param data any\n   * @returns string\n   */\n  private _getHex(data: any): string {\n    const hex = new Array(3);\n    hex[0] = data[0].toString(16);\n    hex[1] = data[1].toString(16);\n    hex[2] = data[2].toString(16);\n\n    hex.forEach((val, key) => {\n      if (val.length === 1) {\n        hex[key] = '0' + hex[key];\n      }\n    });\n\n    return coerceHexaColor(`${hex[0]}${hex[1]}${hex[2]}`) || this.emptyColor;\n  }\n\n  /**\n   * Update RGBA color\n   * @param data any\n   */\n  private _updateRGBA(data?: any): void {\n    if (!this._selectedColor && !data) {\n      this._rgbaColor = 'rgba(255,0,0,1)';\n    }\n\n    const rgb = this._getRGB(data);\n    this._rgbaColor = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 1)`;\n  }\n\n  /**\n   * Update RGB form\n   * @param data any\n   */\n  private _updateRGB(data?: any): void {\n    if (!this.rgbForm) {\n      return;\n    }\n\n    if (!data) {\n      data = this._getRGB();\n    }\n\n    this.rgbForm.setValue({ R: data[0], G: data[1], B: data[2] });\n  }\n\n  /**\n   * Get selected base color from the canvas\n   * @param e MouseEvent\n   */\n  private changeBaseColor(e): void {\n    if (this._isPressed) {\n      this.render.setStyle(this._sc.nativeElement, 'background-position-y', `${e.offsetY}px`);\n      const data = this._stripContext.getImageData(e.offsetX, e.offsetY, 1, 1).data;\n      this._updateRGBA(data);\n      this._fillGradient();\n      this.updateValues(data);\n    }\n  }\n\n  /**\n   * Get selected color from the canvas\n   * @param e MouseEvent\n   */\n  private changeColor(e): void {\n    if (this._isPressed) {\n      this.render.setStyle(this._bp.nativeElement, 'top', `${e.offsetY - 5}px`);\n      this.render.setStyle(this._bp.nativeElement, 'left', `${e.offsetX - 5}px`);\n\n      const data = this._blockContext.getImageData(e.offsetX, e.offsetY, 1, 1).data;\n      this.updateValues(data);\n    }\n  }\n\n  /**\n   * Emit update from the selected color\n   * @param data any\n   */\n  private updateValues(data: any): void {\n    if (data) {\n      this._updateRGB(data);\n      this._tmpSelectedColor.next(this._getHex(data));\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  Inject,\n  OnDestroy,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MccColorPickerComponent } from './color-picker.component';\nimport { EMPTY_COLOR, coerceHexaColor, isValidColor, MccColorPickerOption } from './color-picker';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n/**\n * This directive change the background of the button\n */\n@Directive({\n  selector: '[mccColorPickerOption], [mcc-color-picker-option]',\n  exportAs: 'mccColorPickerOption',\n})\nexport class MccColorPickerOptionDirective implements AfterViewInit {\n  /**\n   * Receive the color\n   */\n  @Input('mccColorPickerOption')\n  get color(): MccColorPickerOption {\n    return this._color;\n  }\n  set color(value: MccColorPickerOption) {\n    this._color = value;\n  }\n  private _color: MccColorPickerOption;\n\n  constructor(\n    private elementRef: ElementRef,\n    private render: Renderer2,\n    @Inject(EMPTY_COLOR) private emptyColor: string\n  ) {\n    this._color = emptyColor;\n  }\n\n  ngAfterViewInit() {\n    if (this.color) {\n      let color: string;\n      if (typeof this.color === 'string') {\n        color = this.color;\n      } else {\n        color = this.color.value;\n        this.render.setAttribute(this.elementRef.nativeElement, 'aria-label', this.color.text);\n      }\n\n      if (isValidColor(color)) {\n        // apply the color\n        this.render.setStyle(\n          this.elementRef.nativeElement,\n          'background',\n          coerceHexaColor(color) || this.emptyColor\n        );\n      }\n    }\n  }\n}\n\n/**\n * Directive applied to an element to make it usable as an origin for an ColorPicker.\n */\n@Directive({\n  selector: '[mcc-color-picker-origin], [mccColorPickerOrigin]',\n  exportAs: 'mccColorPickerOrigin',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MccColorPickerOriginDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MccColorPickerOriginDirective implements ControlValueAccessor {\n  /**\n   * Emit changes from the origin\n   */\n  @Output() change: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  /**\n   * Propagate changes to angular\n   */\n  propagateChanges: (_: any) => {};\n\n  /**\n   * Reference to the element on which the directive is applied.\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Inject(EMPTY_COLOR) private emptyColor: string\n  ) {\n    // listen changes onkeyup and update color picker\n    renderer.listen(elementRef.nativeElement, 'keyup', (event: KeyboardEvent) => {\n      const value: string = event.currentTarget['value'];\n      if (event.isTrusted && isValidColor(value)) {\n        this.writeValueFromKeyup(coerceHexaColor(value) || this.emptyColor);\n      }\n    });\n  }\n\n  /**\n   * This method will be called by the forms API to write to the view when\n   * programmatic (model -> view) changes are requested.\n   */\n  writeValue(color: string) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', color);\n    this.change.next(color);\n    if (this.propagateChanges) {\n      this.propagateChanges(color);\n    }\n  }\n\n  /**\n   * This method will be called by the color picker\n   */\n  writeValueFromColorPicker(color: string) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', color);\n    this.propagateChanges(color);\n  }\n\n  /**\n   * This method will be called from origin whe key is up\n   */\n  writeValueFromKeyup(color: string) {\n    this.change.next(color);\n    this.propagateChanges(color);\n  }\n\n  /**\n   * This is called by the forms API on initialization so it can update the\n   * form model when values propagate from the view (view -> model).\n   * @param fn any\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChanges = fn;\n  }\n\n  /**\n   * This is called by the forms API on initialization so it can update the form model on blur\n   * @param fn any\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * called by the forms API when the control status changes to or from \"DISABLED\"\n   * @param isDisabled boolean\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n}\n\n/**\n * Directive connect an color picker with any input, select or textarea.\n * The color picker will be automatically updated when the value of the origin is\n * changed.\n */\n@Directive({\n  selector: '[mcc-connected-color-picker], [mccConnectedColorPicker]',\n  exportAs: 'mccConnectedColorPicker',\n})\nexport class MccConnectedColorPickerDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Origin of the connected color picker\n   */\n  @Input('mccConnectedColorPickerOrigin') origin: MccColorPickerOriginDirective;\n\n  /**\n   * Color picker subscription\n   */\n  private _colorPickerSub: Subscription;\n\n  /**\n   * Origin subscription\n   */\n  private _originSub: Subscription;\n\n  constructor(\n    private colorPicker: MccColorPickerComponent,\n    public changeDetectorRef: ChangeDetectorRef,\n    @Inject(EMPTY_COLOR) private emptyColor: string\n  ) {}\n\n  ngAfterViewInit() {\n    if (!this._colorPickerSub) {\n      this._attachColorPicker();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._colorPickerSub && !this._colorPickerSub.closed) {\n      this._colorPickerSub.unsubscribe();\n    }\n    if (this._originSub && !this._originSub.closed) {\n      this._originSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Attach color picker and origin\n   */\n  private _attachColorPicker(): void {\n    // subscribe to origin change to update color picker\n    this._originSub = this.origin.change.subscribe(value => {\n      if (\n        isValidColor(value) ||\n        (value === this.emptyColor && this.colorPicker.selectedColor !== this.emptyColor)\n      ) {\n        this.colorPicker.updateTmpSelectedColor(value);\n      }\n      this.colorPicker.selectedColor = value;\n      this.changeDetectorRef.detectChanges();\n    });\n\n    // subscribe to color picker changes and set on origin element\n    this._colorPickerSub = this.colorPicker.change.subscribe(value =>\n      this.origin.writeValueFromColorPicker(value)\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { EMPTY_COLOR, USED_COLORS, ColorPickerConfig } from './color-picker';\n\nimport { MccColorPickerService } from './color-picker.service';\n\nimport { MccColorPickerComponent } from './color-picker.component';\nimport { MccColorPickerSelectorComponent } from './color-picker-selector.component';\nimport { MccColorPickerCollectionComponent } from './color-picker-collection.component';\nimport {\n  MccConnectedColorPickerDirective,\n  MccColorPickerOriginDirective,\n  MccColorPickerOptionDirective,\n} from './color-picker.directives';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  declarations: [\n    MccColorPickerComponent,\n    MccConnectedColorPickerDirective,\n    MccColorPickerSelectorComponent,\n    MccColorPickerOriginDirective,\n    MccColorPickerOptionDirective,\n    MccColorPickerCollectionComponent,\n  ],\n  exports: [\n    MccColorPickerComponent,\n    MccConnectedColorPickerDirective,\n    MccColorPickerOriginDirective,\n    MccColorPickerCollectionComponent,\n  ],\n  providers: [\n    MccColorPickerService,\n    { provide: EMPTY_COLOR, useValue: 'none' },\n    { provide: USED_COLORS, useValue: [] }\n  ],\n})\nexport class MccColorPickerModule {\n  /**\n   *\n   */\n  static forRoot(config: ColorPickerConfig): ModuleWithProviders {\n    return {\n      ngModule: MccColorPickerModule,\n      providers: [\n        { provide: EMPTY_COLOR, useValue: config.empty_color || 'none' },\n        { provide: USED_COLORS, useValue: config.used_colors || [] }\n      ],\n    };\n  }\n}\n","import { MccScrollspyItemDirective } from './scrollspy.directives';\nimport { BehaviorSubject } from 'rxjs';\n\n// scrollspy animations\nexport const SCROLLSPY_ANIMATION_SMOOTH = 'smooth';\nexport const SCROLLSPY_ANIMATION_INSTANT = 'instant';\nexport const SCROLLSPY_ANIMATION_AUTO = 'auto';\n\n/**\n * Scrollspy group\n */\nexport interface MccScrollspyGroup {\n  name: string;\n  animation: ScrollBehavior;\n  items: BehaviorSubject<MccScrollspyItemDirective[]>;\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { MccScrollspyItemDirective } from './scrollspy.directives';\nimport { MccScrollspyGroup, SCROLLSPY_ANIMATION_SMOOTH } from './scrollspy';\nimport { Subscription, Observable, BehaviorSubject, fromEvent } from 'rxjs';\nimport { debounceTime, withLatestFrom } from 'rxjs/operators';\n\n@Injectable()\nexport class MccScrollspyService implements OnDestroy {\n  /**\n   * When scroll is from click event, change this attr to true\n   * So scroll event obeservable doesn't emit any update\n   */\n  private _fromClick: boolean = false;\n\n  /**\n   * List of scrollspy group\n   */\n  private data: MccScrollspyGroup[] = [];\n\n  /**\n   * Scroll event subscription\n   */\n  private _scrollSub: Subscription;\n\n  constructor(@Inject('Window') private window: any) {\n    // listen to scroll event\n    this._scrollSub = fromEvent(window, 'scroll')\n      .pipe(debounceTime(50), withLatestFrom(() => window.scrollY))\n      .subscribe(position => {\n        if (!this._fromClick) {\n          this._updateFocused(position);\n        }\n        this._fromClick = false;\n      });\n  }\n\n  ngOnDestroy() {\n    if (this._scrollSub && !this._scrollSub.closed) {\n      this._scrollSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Update information about wich element is on focus\n   * @param position number\n   */\n  private _updateFocused(position: number): void {\n    this.data.forEach(group => {\n      const items = [];\n      group.items.getValue().forEach((item, index) => {\n        item.focus = false;\n        if (item.top <= position) {\n          if (items[index - 1]) {\n            items[index - 1].focus = false;\n          }\n\n          item.focus = true;\n        }\n\n        items.push(item);\n      });\n\n      group.items.next(items);\n    });\n  }\n\n  /**\n   * Create new group of items\n   * @param name string\n   * @param items MccScrollspyItemDirective[]\n   * @param animation ScrollBehavior\n   */\n  create(\n    name: string,\n    items?: MccScrollspyItemDirective[],\n    animation?: ScrollBehavior\n  ): MccScrollspyGroup {\n    let group: MccScrollspyGroup = this.data.find(group => group.name === name);\n    if (!group) {\n      group = {\n        name: name,\n        animation: animation || SCROLLSPY_ANIMATION_SMOOTH,\n        items: new BehaviorSubject<MccScrollspyItemDirective[]>(items || []),\n      };\n\n      this.data.push(group);\n    } else {\n      group.items.next(items || []);\n    }\n\n    return group;\n  }\n\n  /**\n   * Return observable of the group\n   * @param name string\n   */\n  group(name: string): Observable<MccScrollspyItemDirective[]> {\n    let group: MccScrollspyGroup = this.data.find(g => g.name === name);\n    if (!group) {\n      group = this.create(name);\n    }\n\n    return group.items.asObservable();\n  }\n\n  /**\n   * Scroll to one of the items\n   * @param name string\n   * @param id string\n   */\n  scrollTo(name: string, id: string): void {\n    const group: MccScrollspyGroup = this.data.find(group => group.name === name);\n\n    group.items.getValue().forEach(item => {\n      item.focus = false;\n      if (item.id === id) {\n        this._fromClick = true;\n        this._updateFocused(item.top);\n        window.scrollTo({ top: item.top, behavior: group.animation });\n      }\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Input,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MccScrollspyService } from './scrollspy.service';\n\n@Directive({\n  selector: '[mccScrollspyItem], [mcc-scrollspy-item]',\n  exportAs: 'mccScrollspyItem',\n})\nexport class MccScrollspyItemDirective implements AfterContentInit {\n  /**\n   * Hold the element id, if element doesn't have id\n   * the method will create one\n   */\n  set id(id: string) {\n    if (!id) {\n      id = this._createId();\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', id);\n    }\n\n    this._id = id;\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _id: string;\n\n  /**\n   * Element distance of the top\n   */\n  get top(): number {\n    return this.elementRef.nativeElement.offsetTop;\n  }\n\n  /**\n   * Element is focused\n   */\n  @Input('focus')\n  set focus(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n  }\n  get focus(): boolean {\n    return this._focused;\n  }\n  private _focused: boolean;\n\n  /**\n   * Label that will appear on the list of items.\n   * The default is the text inside the element\n   */\n  @Input() label: string;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterContentInit() {\n    if (!this.label) {\n      this.label = this.elementRef.nativeElement.textContent;\n    }\n    this.id = this.elementRef.nativeElement.id;\n  }\n\n  /**\n   * Create an ID for the element\n   */\n  private _createId(): string {\n    let tmpID = this.label.toLowerCase().replace(/[ ]+/gi, '_');\n    return `mcc_scrollspy_${tmpID}`;\n  }\n}\n\n@Directive({\n  selector: '[mccScrollspyGroup], [mcc-scrollspy-group]',\n  exportAs: 'mccScrollspyGroup',\n})\nexport class MccScrollspyGroupDirective implements AfterContentInit {\n  /**\n   * List of scrollspy items\n   */\n  @ContentChildren(MccScrollspyItemDirective) items: QueryList<MccScrollspyItemDirective>;\n\n  /**\n   * Name of the scrollspy group\n   */\n  @Input('mccScrollspyGroup')\n  set name(name: string) {\n    this._name = name;\n  }\n  private _name: string;\n\n  constructor(private mccScrollspyService: MccScrollspyService) {}\n\n  ngAfterContentInit() {\n    // add the group items\n    const items = this.items.map(item => item);\n    this.mccScrollspyService.create(this._name, items);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MccScrollspyService } from './scrollspy.service';\nimport { MccScrollspyGroupDirective, MccScrollspyItemDirective } from './scrollspy.directives';\n\n@NgModule({\n  imports: [CommonModule, ScrollDispatchModule],\n  providers: [MccScrollspyService, { provide: 'Window', useValue: window }],\n  declarations: [MccScrollspyGroupDirective, MccScrollspyItemDirective],\n  exports: [MccScrollspyGroupDirective, MccScrollspyItemDirective],\n})\nexport class MccScrollspyModule {}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\n/**\n * Types of animation to be executed by speed-dial-actions\n */\nexport type ANIMATION = 'fling' | 'scale';\n\n/**\n * Default value of action button z-index \n */\nexport const Z_INDEX = 23;\n\n/**\n * SPIN animation used on speed-dial\n */\nexport const SPIN_ANIMATION = trigger('spin', [\n  state('open', style({\n    transform: 'rotate(360deg)',\n  })),\n  state('closed', style({\n    transform: 'rotate(0deg)',\n  })),\n  transition('open => closed', [animate('.3s')]),\n  transition('closed => open', [animate('.3s')]),\n]);","import { AfterContentInit, Component, ContentChildren, Input, QueryList, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { MatButton } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { ANIMATION, Z_INDEX } from './animations';\nimport { DIRECTION } from './directions';\n\n@Component({\n  selector: 'mcc-speed-dial-actions',\n  templateUrl: './speed-dial-actions.component.html',\n  styleUrls: ['./speed-dial-actions.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MccSpeedDialActionsComponent implements AfterContentInit {\n  /**\n   * Hold all the actions button inside fab speed dial\n   */\n  @ContentChildren(MatButton) _buttons: QueryList<MatButton>;\n\n  /**\n   * Set type of animation will be executed on open/close\n   * Type available are: scale | fling\n   */\n  @Input() set animation(animation: ANIMATION) {\n    this._animation.next(animation);\n  }\n  private _animation: BehaviorSubject<ANIMATION> = new BehaviorSubject('scale');\n\n  /**\n   * Last animation the was used\n   */\n  private _lastAnimationClass: string;\n\n  constructor(private renderer: Renderer2) { }\n\n  /**\n   * The z-index style and animation class are handle separate because\n   * z-index will be set only one time, and the animation class will be set\n   * every time the animation change\n   */\n  ngAfterContentInit() {\n    // set z-index style to each button action\n    this._buttons.forEach((button, index) => {\n      this.renderer.setStyle(button._elementRef.nativeElement, 'z-index', (Z_INDEX - index));\n    });\n\n    // set the animation class to each button action\n    this._animation.subscribe(animation => {\n      const nextAnimationClass = `speed-dial-item-animation-${animation}`;\n      this._buttons.forEach(button => {\n        if (this._lastAnimationClass) {\n          this.renderer.removeClass(button._elementRef.nativeElement, this._lastAnimationClass);\n        }\n        this.renderer.addClass(button._elementRef.nativeElement, nextAnimationClass);\n      });\n\n      this._lastAnimationClass = nextAnimationClass;\n    });\n  }\n\n  /**\n   * Responsible for change the state of the action buttons to visible\n   * \n   * @param direction DIRECTION\n   */\n  show(direction: DIRECTION) {\n    switch (this._animation.value) {\n      case 'scale': {\n        this._buttons.forEach((button, index) => {\n          const transition = 3 + (65 * index);\n\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transition-delay', `${transition}ms`);\n          this.renderer.setStyle(button._elementRef.nativeElement, 'opacity', '1');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transform', 'scale(1)');\n        });\n        break;\n      }\n\n      case 'fling': {\n        const translateFn = (direction == 'up' || direction == 'down') ? 'translateY' : 'translateX';\n        const sign = (direction == 'down' || direction == 'right') ? '-' : '';\n\n        this._buttons.forEach(button => {\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transition-delay', '0ms');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'opacity', '1');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transform', `${translateFn}(${sign}0)`);\n        });\n      }\n    }\n  }\n\n  /**\n   * Hide all the buttons action\n   * \n   * @param direction DIRECTION\n   */\n  hide(direction: DIRECTION) {\n    switch (this._animation.value) {\n      case 'scale': {\n        this._buttons.forEach((button, index) => {\n          const transition = 3 - (65 * index);\n\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transition-delay', `${transition}ms`);\n          this.renderer.setStyle(button._elementRef.nativeElement, 'opacity', '0');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transform', 'scale(0)');\n        });\n        break;\n      }\n\n      case 'fling': {\n        const translateFn = (direction == 'up' || direction == 'down') ? 'translateY' : 'translateX';\n        const sign = (direction == 'down' || direction == 'right') ? '-' : '';\n\n        this._buttons.forEach((button, index) => {\n          const transform = (55 * (index + 1) - (index * 5));\n\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transition-delay', '0ms');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'opacity', '1');\n          this.renderer.setStyle(button._elementRef.nativeElement, 'transform', `${translateFn}(${sign}${transform}px)`);\n        });\n      }\n    }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AfterViewInit, Component, ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { SPIN_ANIMATION } from './animations';\nimport { DIRECTION } from './directions';\nimport { MccSpeedDialActionsComponent } from './speed-dial-actions.component';\n\n@Component({\n  selector: 'mcc-speed-dial',\n  templateUrl: './speed-dial.component.html',\n  styleUrls: ['./speed-dial.component.scss'],\n  animations: [SPIN_ANIMATION],\n})\nexport class MccSpeedDialComponent implements AfterViewInit, OnChanges {\n  /**\n   * Hold speed-dial-actions component inside this component\n   */\n  @ContentChild(MccSpeedDialActionsComponent, { static: false }) actions: MccSpeedDialActionsComponent;\n\n  /**\n   * Set initial 'open' state\n   */\n  @Input('open') set isOpen(open: boolean) {\n    this._isOpen = coerceBooleanProperty(open);\n  }\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  private _isOpen: boolean = false;\n\n  /**\n   * When enabled, handle open/close state on mouse hover\n   */\n  @Input('mouseHover') set hover(hover: boolean) {\n    this._hover = coerceBooleanProperty(hover);\n  }\n  private _hover: boolean = false;\n\n  /**\n   * Enable/disable spin animation when button is clicked or hovered\n   */\n  @Input() set spin(spin: boolean) {\n    this._spin = spin;\n  }\n  get spin() {\n    return this._spin;\n  }\n  private _spin: boolean = true;\n\n  /**\n   * Define the direction of the actions button\n   * Directions available are: up | down | left | right\n   */\n  @Input() set direction(direction: DIRECTION) {\n    this._direction = direction;\n  }\n  get direction(): DIRECTION {\n    return this._direction;\n  }\n  private _direction: DIRECTION = 'up';\n\n  /**\n   * Event emitted when open state change\n   */\n  @Output() openStateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  /**\n   * Call fab speed dial actions functions to change the\n   * visibility of the buttons\n   */\n  private _setActionsState() {\n    if (this._isOpen) {\n      this.actions.show(this._direction);\n    } else {\n      this.actions.hide(this._direction);\n    }\n  }\n\n  /**\n   * Set initial state to the action buttons inside speed-dial-actions\n   */\n  ngAfterViewInit() {\n    this._setActionsState();\n  }\n\n  /**\n   * \n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if ('isOpen' in changes && changes['isOpen'].previousValue !== undefined) {\n      this._setActionsState();\n    }\n  }\n\n  /**\n   * When mouseHover is enabled and state is closed\n   * calls toggle to open the actions\n   */\n  hoverStart() {\n    if (this._hover && !this._isOpen) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * When mouseHover is enabled and state is open\n   * calls toggle to close the actions\n   */\n  hoverStop() {\n    if (this._hover && this._isOpen) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Change the open state\n   */\n  toggle() {\n    this._isOpen = !this._isOpen;\n\n    this._setActionsState();\n\n    this.openStateChange.emit(this._isOpen);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MccSpeedDialActionsComponent } from './speed-dial-actions.component';\nimport { MccSpeedDialComponent } from './speed-dial.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule],\n  declarations: [MccSpeedDialComponent, MccSpeedDialActionsComponent],\n  exports: [MccSpeedDialComponent, MccSpeedDialActionsComponent],\n})\nexport class MccSpeedDialModule { }\n","// accepted hours\nexport type MccTimerPickerHour =\n  | '1'\n  | '2'\n  | '3'\n  | '4'\n  | '5'\n  | '6'\n  | '7'\n  | '8'\n  | '9'\n  | '10'\n  | '11'\n  | '12';\n\n// accepted minutes\nexport type MccTimerPickerMinute =\n  | '00'\n  | '05'\n  | '10'\n  | '15'\n  | '20'\n  | '25'\n  | '30'\n  | '35'\n  | '40'\n  | '45'\n  | '50'\n  | '55';\n\n/** \n * format 12 return hours with 'am' or 'pm'. Examples: \n * 12:00 am\n * 3:00 pm\n * 5:35 pm\n * \n * format 24 return hours in 24h period. Examples:\n * 12:00\n * 15:00\n * 17:35\n */\nexport type MccTimerPickerFormat = '12' | '24';\n\n// period typs\nexport type MccTimerPickerPeriod = 'am' | 'pm';\n\n// timer picker type\nexport type MccTimerPickerTimeType = 'hour' | 'min';\n\n/**\n * contants to create timer with HOURS or MINUTES\n */\nexport const HOURS: string[] = ['12', '11', '1', '10', '2', '9', '3', '8', '4', '7', '5', '6'];\nexport const MINUTES: string[] = [\n  '00',\n  '55',\n  '05',\n  '50',\n  '10',\n  '45',\n  '15',\n  '40',\n  '20',\n  '35',\n  '25',\n  '30',\n];\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { CdkOverlayOrigin } from '@angular/cdk/overlay';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport {\n  MccTimerPickerTimeType,\n  MccTimerPickerFormat,\n  MccTimerPickerHour,\n  MccTimerPickerMinute,\n  MccTimerPickerPeriod,\n  HOURS,\n  MINUTES,\n} from './timer-picker';\n\n@Component({\n  selector: 'mcc-timer-picker',\n  templateUrl: './timer-picker.component.html',\n  styleUrls: ['./timer-picker.component.scss'],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MccTimerPickerComponent {\n  /**\n   * Receive selected _hour after confirm\n   */\n  private _selectedHour: MccTimerPickerHour = '12';\n\n  /**\n   * Receive selected _minute after confirm\n   */\n  private _selectedMinute: MccTimerPickerMinute = '00';\n\n  /**\n   * Receive selected _period after confirm\n   */\n  private _selectedPeriod: MccTimerPickerPeriod = 'am';\n\n  /**\n   * Current value (hour/minute) to create the clock\n   */\n  get clock$(): Observable<string[]> {\n    return this._clock.asObservable();\n  }\n  private _clock: BehaviorSubject<string[]> = new BehaviorSubject(HOURS);\n\n  /**\n   * Type there is in focus (hour/minute)\n   */\n  get focus(): MccTimerPickerTimeType {\n    return this._focus;\n  }\n  set focus(value: MccTimerPickerTimeType) {\n    if (value !== this._focus) {\n      this._focus = value;\n      this._clock.next(this._focus === 'hour' ? HOURS : MINUTES);\n    }\n  }\n  private _focus: MccTimerPickerTimeType = 'hour';\n\n  /**\n   * State of the overlay\n   */\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  set isOpen(value: boolean) {\n    this._isOpen = coerceBooleanProperty(value);\n  }\n  private _isOpen: boolean;\n\n  /**\n   * Return temporary selected hour (const HOURS)\n   */\n  get hour(): MccTimerPickerHour {\n    return this._hour;\n  }\n  private _hour: MccTimerPickerHour = '12';\n\n  /**\n   * Return temporary selected minute (const MINUTES)\n   */\n  get minute(): MccTimerPickerMinute {\n    return this._minute;\n  }\n  private _minute: MccTimerPickerMinute = '00';\n\n  /**\n   * Return temporary selected period (am/pm)\n   */\n  get period(): MccTimerPickerPeriod {\n    return this._period;\n  }\n  private _period: MccTimerPickerPeriod = 'am';\n\n  /**\n   * Hide Confirm and Cancel buttons\n   */\n  @Input()\n  get hideButtons(): boolean {\n    return this._hideButtons;\n  }\n  set hideButtons(value: boolean) {\n    this._hideButtons = coerceBooleanProperty(value);\n  }\n  private _hideButtons: boolean = false;\n\n  /**\n   * Format of the hour to be emited on confirm\n   */\n  @Input('mccTimerPickerFormat') format: MccTimerPickerFormat = '12';\n\n  @Input('mccTimerPickerMin') min: string = '00:00 am';\n\n  @Input('mccTimerPickerMax') max: string = '12:00 pm';\n\n  /**\n   * Change btnCancel label\n   */\n  @Input() btnCancel: string = 'Cancel';\n\n  /**\n   * Change btnConfirm label\n   */\n  @Input() btnConfirm: string = 'Ok';\n\n  /**\n   * Event emited when confirm button is pressed.\n   * If buttons are hidden, the event is emited when value is changed\n   */\n  @Output() selected: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Origin reference of connected timer picker\n   */\n  trigger: CdkOverlayOrigin;\n\n  /**\n   * Set to true when timer picker have been connected with another component\n   */\n  connected: boolean = false;\n\n  constructor() { }\n\n  /**\n   * Return timer option class to create line between the middle of the clock and\n   * the option\n   */\n  getSelectedClass(): string {\n    let name = 'selected-index-';\n    if (this.focus === 'hour') {\n      name += HOURS.findIndex(h => h === this.hour);\n    } else {\n      name += MINUTES.findIndex(m => m === this.minute);\n    }\n\n    return name;\n  }\n\n  /**\n   * Select option from the clock.\n   * @param value MccTimerPickerHour | MccTimerPickerMinute\n   */\n  select(value: MccTimerPickerHour | MccTimerPickerMinute): void {\n    if (this.focus === 'hour') {\n      this._hour = <MccTimerPickerHour>value;\n      this.focus = 'min';\n    } else {\n      this._minute = <MccTimerPickerMinute>value;\n    }\n\n    // if buttons are hidden, emit new event when value is changed\n    if (this._hideButtons) {\n      this.confirmSelectedTime();\n    }\n  }\n\n  /**\n   * Returns array containing time, hour and period fragments from time string\n   * @param time string\n   */\n  parseTimeInput(time: string): [number, number, string] {\n    const parsed = time.split(/\\s|:/).map((fragment, index) => {\n      return index === 2 ? fragment : parseInt(fragment, 10);\n    });\n\n    if (parsed.length === 2) {\n      // assume we are using 24 hour time format\n      const hours = parsed[0] as number;\n      if (hours > 11) {\n        parsed[0] = hours - 12;\n        parsed.push('pm');\n      } else {\n        parsed.push('am');\n      }\n    }\n\n    return parsed as [number, number, string];\n  }\n\n  /**\n   * Returns true if option value is not valid\n   * @param value MccTimerPickerHour | MccTimerPickerMinute\n   */\n  isOptionDisabled(value: MccTimerPickerHour | MccTimerPickerMinute): boolean {\n\n    const [minHour, minMinutes, minPeriod] = this.parseTimeInput(this.min);\n    const [maxHour, maxMinutes, maxPeriod] = this.parseTimeInput(this.max);\n\n    const optionValue = parseInt(value, 10);\n    const selectedHour = parseInt(this._hour, 10);\n    const selectedPeriod = this._period;\n\n    if (this.focus === 'hour') {\n      if (optionValue < minHour && selectedPeriod === minPeriod) {\n        return true;\n      } else if (optionValue > maxHour && selectedPeriod === maxPeriod) {\n        return true;\n      }\n    } else {\n      if (selectedHour === minHour && selectedPeriod === minPeriod && optionValue < minMinutes) {\n        return true;\n      } else if (selectedHour === maxHour && selectedPeriod === maxPeriod && optionValue > maxMinutes) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Change period of the clock\n   * @param period MccTimerPickerPeriod\n   */\n  changePeriod(period: MccTimerPickerPeriod): void {\n    this._period = period;\n    // if buttons are hidden, emit new event when value is changed\n    if (this._hideButtons) {\n      this.confirmSelectedTime();\n    }\n  }\n\n  /**\n   * Update selected color, close the panel and notify the user\n   */\n  backdropClick(): void {\n    this.confirmSelectedTime();\n    this._isOpen = false;\n  }\n\n  /**\n   * Change values to last confirm select time\n   */\n  cancelSelection(): void {\n    this._hour = this._selectedHour;\n    this._minute = this._selectedMinute;\n    this._period = this._selectedPeriod;\n    this._isOpen = false;\n  }\n\n  /**\n   * Set new values of time and emit new event with the formated timer\n   */\n  confirmSelectedTime(): void {\n    this._selectedHour = this.hour;\n    this._selectedMinute = this.minute;\n    this._selectedPeriod = this.period;\n\n    // format string to emit selected time\n    let formated: string;\n    if (this.format === '12') {\n      formated = `${this.hour}:${this.minute} ${this.period}`;\n    } else {\n      let hour: string = this.hour;\n      if (this.period === 'pm') {\n        hour = `${parseInt(hour) + 12}`;\n      }\n\n      formated = `${hour}:${this.minute}`;\n    }\n\n    this.selected.emit(formated);\n\n    // only close automatically if button aren't hidden\n    if (!this._hideButtons) {\n      this._isOpen = false;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Input,\n  Output,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MccTimerPickerComponent } from './timer-picker.component';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\n@Directive({\n  selector: '[mccTimerPickerOrigin], [mcc-timer-picker-origin]',\n  exportAs: 'mccTimerPickerOrigin',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MccTimerPickerOriginDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MccTimerPickerOriginDirective {\n  /**\n   * Emit changes from the origin\n   */\n  @Output() change: BehaviorSubject<string> = new BehaviorSubject<string>('');\n\n  /**\n   * Emit changes from the origin\n   */\n  @Output() hasFocus: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Propagate changes to angular\n   */\n  propagateChanges: (_: any) => {};\n\n  /**\n   * Reference to the element on which the directive is applied.\n   */\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    // listen focus\n    renderer.listen(elementRef.nativeElement, 'focus', () => this.hasFocus.next(true));\n  }\n\n  /**\n   * This method will be called by the forms API to write to the view when\n   * programmatic (model -> view) changes are requested.\n   */\n  writeValue(time: string) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', time);\n    this.change.next(time);\n    if (this.propagateChanges) {\n      this.propagateChanges(time);\n    }\n  }\n\n  /**\n   * This method will be called by the time picker\n   */\n  writeValueFromTimerPicker(time: string) {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', time);\n    this.propagateChanges(time);\n  }\n\n  /**\n   * This method will be called from origin whe key is up\n   */\n  writeValueFromKeyup(time: string) {\n    this.change.next(time);\n    this.propagateChanges(time);\n  }\n\n  /**\n   * This is called by the forms API on initialization so it can update the\n   * form model when values propagate from the view (view -> model).\n   * @param fn any\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChanges = fn;\n  }\n\n  /**\n   * This is called by the forms API on initialization so it can update the form model on blur\n   * @param fn any\n   */\n  registerOnTouched(fn: any): void { }\n\n  /**\n   * called by the forms API when the control status changes to or from \"DISABLED\"\n   * @param isDisabled boolean\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n}\n\n@Directive({\n  selector: '[mccConnectedTimerPicker], [mcc-connected-timer-picker]',\n  exportAs: 'mccConnectedTimerPicker',\n})\nexport class MccConnectedTimerPickerDirective implements AfterViewInit, OnDestroy {\n  /**\n   * origin of the connected timer picker\n   */\n  @Input('mccConnectedTimerPickerOrigin') origin: MccTimerPickerOriginDirective;\n\n  /**\n   * subscription of the origin focus observable\n   */\n  private _originFocus: Subscription;\n\n  /**\n   * subscription of the timer picker selected change\n   */\n  private _timerPickerSub: Subscription;\n\n  constructor(\n    private timerPicker: MccTimerPickerComponent,\n    public changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.timerPicker.connected = true;\n  }\n\n  ngAfterViewInit() {\n    if (!this._timerPickerSub) {\n      this.timerPicker.trigger = this.origin;\n      this._attachTimerPicker();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._originFocus && !this._originFocus.closed) {\n      this._originFocus.unsubscribe();\n    }\n    if (this._timerPickerSub && !this._timerPickerSub.closed) {\n      this._timerPickerSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Attach the timer picker to origin element (input)\n   */\n  private _attachTimerPicker(): void {\n    this._originFocus = this.origin.hasFocus.subscribe(focused => {\n      this.timerPicker.focus = 'hour';\n      this.timerPicker.isOpen = focused;\n      this.changeDetectorRef.detectChanges();\n    });\n\n    this._timerPickerSub = this.timerPicker.selected.subscribe(value =>\n      this.origin.writeValueFromTimerPicker(value)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatButtonModule } from '@angular/material';\n\nimport { MccTimerPickerComponent } from './timer-picker.component';\nimport {\n  MccTimerPickerOriginDirective,\n  MccConnectedTimerPickerDirective,\n} from './timer-picker.directives';\n\n@NgModule({\n  imports: [CommonModule, PortalModule, OverlayModule, MatButtonModule],\n  declarations: [\n    MccTimerPickerComponent,\n    MccTimerPickerOriginDirective,\n    MccConnectedTimerPickerDirective,\n  ],\n  exports: [\n    MccTimerPickerComponent,\n    MccTimerPickerOriginDirective,\n    MccConnectedTimerPickerDirective,\n  ],\n})\nexport class MccTimerPickerModule { }\n"],"names":["InjectionToken","BehaviorSubject","Injectable","tslib_1.__param","Inject","EventEmitter","coerceBooleanProperty","tslib_1.__decorate","Input","Output","Component","ChangeDetectionStrategy","ChangeDetectorRef","tslib_1.__values","map","tslib_1.__spread","ContentChildren","QueryList","ElementRef","Validators","FormControl","ViewChild","FormBuilder","Renderer2","Directive","NG_VALUE_ACCESSOR","forwardRef","NgModule","CommonModule","PortalModule","OverlayModule","ReactiveFormsModule","MatButtonModule","MatFormFieldModule","MatInputModule","fromEvent","debounceTime","withLatestFrom","ScrollDispatchModule","trigger","state","style","transition","animate","MatButton","ViewEncapsulation","ContentChild"],"mappings":"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"}